kotlin version: 2.2.0
error message: java.lang.RuntimeException: Exception while generating code for:
FUN name:CameraPreview visibility:public modality:FINAL returnType:kotlin.Unit
  VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:com.fonrouge.androidlib.barcode.BarcodeCamera
  VALUE_PARAMETER kind:Regular name:vmCamera index:1 type:com.fonrouge.androidlib.viewModel.VMCamera
  VALUE_PARAMETER kind:Regular name:onReadBarcode index:2 type:kotlin.Function1<com.fonrouge.androidlib.ui.CodeEntry, kotlin.Unit>
  VALUE_PARAMETER kind:Regular name:onFilter index:3 type:kotlin.Function1<com.google.mlkit.vision.barcode.common.Barcode, kotlin.Boolean>?
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Function1<com.google.mlkit.vision.barcode.common.Barcode, kotlin.Boolean>?
  annotations:
    Composable
  BLOCK_BODY
    VAR name:lifecycleOwner type:androidx.lifecycle.LifecycleOwner [val]
      CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=androidx.lifecycle.LifecycleOwner origin=GET_PROPERTY
        ARG <this>: TYPE_OP type=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal>
          CALL 'public final fun <get-LocalLifecycleOwner> (): androidx.compose.runtime.ProvidableCompositionLocal<androidx.lifecycle.LifecycleOwner> declared in androidx.lifecycle.compose.LocalLifecycleOwnerKt' type=androidx.compose.runtime.ProvidableCompositionLocal<androidx.lifecycle.LifecycleOwner> origin=GET_PROPERTY
    VAR name:imageCapture type:androidx.camera.core.ImageCapture [val]
      BLOCK type=androidx.camera.core.ImageCapture origin=null
        VAR IR_TEMPORARY_VARIABLE name:tmp0 type:kotlin.Any? [val]
          CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=@[EnhancedNullability] androidx.camera.core.ImageCapture origin=null
            TYPE_ARG T: @[EnhancedNullability] androidx.camera.core.ImageCapture
            ARG calculation: BLOCK type=kotlin.Function0<@[EnhancedNullability] androidx.camera.core.ImageCapture> origin=LAMBDA
              COMPOSITE type=kotlin.Unit origin=null
              FUNCTION_REFERENCE 'private final fun CameraPreview$lambda$1 (): @[EnhancedNullability] androidx.camera.core.ImageCapture declared in com.fonrouge.androidlib.barcode.BarcodeCamera' type=kotlin.Function0<@[EnhancedNullability] androidx.camera.core.ImageCapture> origin=INLINE_LAMBDA reflectionTarget=null
        CALL 'public final fun checkNotNullExpressionValue (value: kotlin.Any?, expression: kotlin.String): kotlin.Unit declared in kotlin.jvm.internal.Intrinsics' type=kotlin.Unit origin=null
          ARG value: GET_VAR 'val tmp0: kotlin.Any? [val] declared in com.fonrouge.androidlib.barcode.BarcodeCamera.CameraPreview' type=kotlin.Any? origin=null
          ARG expression: CONST String type=kotlin.String value="remember(...)"
        GET_VAR 'val tmp0: kotlin.Any? [val] declared in com.fonrouge.androidlib.barcode.BarcodeCamera.CameraPreview' type=kotlin.Any? origin=null
    CALL 'public final fun AndroidView$default <T> (factory: kotlin.Function1<android.content.Context, T of androidx.compose.ui.viewinterop.AndroidView_androidKt.AndroidView$default>, modifier: androidx.compose.ui.Modifier?, update: kotlin.Function1<T of androidx.compose.ui.viewinterop.AndroidView_androidKt.AndroidView$default, kotlin.Unit>?, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in androidx.compose.ui.viewinterop.AndroidView_androidKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
      TYPE_ARG T: androidx.camera.view.PreviewView
      ARG factory: BLOCK type=kotlin.Function1<android.content.Context, androidx.camera.view.PreviewView> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=kotlin.Function1<android.content.Context, androidx.camera.view.PreviewView> origin=null
          TYPE_ARG T: kotlin.Function1<android.content.Context, androidx.camera.view.PreviewView>
          ARG dynamicCall: CALL 'public final fun invoke (p0: com.fonrouge.androidlib.barcode.BarcodeCamera, p1: androidx.lifecycle.LifecycleOwner, p2: androidx.camera.core.ImageCapture, p3: kotlin.Function1<com.fonrouge.androidlib.ui.CodeEntry, kotlin.Unit>, p4: kotlin.Function1<com.google.mlkit.vision.barcode.common.Barcode, kotlin.Boolean>?, p5: com.fonrouge.androidlib.viewModel.VMCamera): kotlin.Function1<android.content.Context, androidx.camera.view.PreviewView> declared in kotlin.jvm.internal.invokeDynamic' type=kotlin.Function1<android.content.Context, androidx.camera.view.PreviewView> origin=null
            ARG p0: GET_VAR '<this>: com.fonrouge.androidlib.barcode.BarcodeCamera declared in com.fonrouge.androidlib.barcode.BarcodeCamera.CameraPreview' type=com.fonrouge.androidlib.barcode.BarcodeCamera origin=null
            ARG p1: GET_VAR 'val lifecycleOwner: androidx.lifecycle.LifecycleOwner [val] declared in com.fonrouge.androidlib.barcode.BarcodeCamera.CameraPreview' type=androidx.lifecycle.LifecycleOwner origin=null
            ARG p2: GET_VAR 'val imageCapture: androidx.camera.core.ImageCapture [val] declared in com.fonrouge.androidlib.barcode.BarcodeCamera.CameraPreview' type=androidx.camera.core.ImageCapture origin=null
            ARG p3: GET_VAR 'onReadBarcode: kotlin.Function1<com.fonrouge.androidlib.ui.CodeEntry, kotlin.Unit> declared in com.fonrouge.androidlib.barcode.BarcodeCamera.CameraPreview' type=kotlin.Function1<com.fonrouge.androidlib.ui.CodeEntry, kotlin.Unit> origin=null
            ARG p4: GET_VAR 'onFilter: kotlin.Function1<com.google.mlkit.vision.barcode.common.Barcode, kotlin.Boolean>? declared in com.fonrouge.androidlib.barcode.BarcodeCamera.CameraPreview' type=kotlin.Function1<com.google.mlkit.vision.barcode.common.Barcode, kotlin.Boolean>? origin=null
            ARG p5: GET_VAR 'vmCamera: com.fonrouge.androidlib.viewModel.VMCamera declared in com.fonrouge.androidlib.barcode.BarcodeCamera.CameraPreview' type=com.fonrouge.androidlib.viewModel.VMCamera origin=null
          ARG bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
            ARG tag: CONST Int type=kotlin.Int value=6
            ARG owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
            ARG name: CONST String type=kotlin.String value="metafactory"
            ARG descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
            ARG isInterface: CONST Boolean type=kotlin.Boolean value=false
          ARG bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
            CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              ARG method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Any
            RAW_FUNCTION_REFERENCE 'private final fun CameraPreview$lambda$4 (this$0: com.fonrouge.androidlib.barcode.BarcodeCamera, $lifecycleOwner: androidx.lifecycle.LifecycleOwner, $imageCapture: androidx.camera.core.ImageCapture, $onReadBarcode: kotlin.Function1<com.fonrouge.androidlib.ui.CodeEntry, kotlin.Unit>, $onFilter: kotlin.Function1<com.google.mlkit.vision.barcode.common.Barcode, kotlin.Boolean>?, $vmCamera: com.fonrouge.androidlib.viewModel.VMCamera, context: android.content.Context): androidx.camera.view.PreviewView declared in com.fonrouge.androidlib.barcode.BarcodeCamera' type=kotlin.Any
            CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              ARG method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: android.content.Context): androidx.camera.view.PreviewView [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
      ARG modifier: COMPOSITE type=androidx.compose.ui.Modifier? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.ui.Modifier? value=null
      ARG update: COMPOSITE type=kotlin.Function1<T of androidx.compose.ui.viewinterop.AndroidView_androidKt.AndroidView$default, kotlin.Unit>? origin=DEFAULT_VALUE
        CONST Null type=kotlin.Function1<T of androidx.compose.ui.viewinterop.AndroidView_androidKt.AndroidView$default, kotlin.Unit>? value=null
      ARG $mask0: CONST Int type=kotlin.Int value=6
      ARG $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:43)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:422)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:439)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:164)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateFile(JvmIrCodegenFactory.kt:419)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:388)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.runCodegen$cli(KotlinToJVMBytecodeCompiler.kt:432)
	at org.jetbrains.kotlin.cli.pipeline.jvm.JvmBackendPipelinePhase.executePhase(JvmBackendPipelinePhase.kt:95)
	at org.jetbrains.kotlin.cli.pipeline.jvm.JvmBackendPipelinePhase.executePhase(JvmBackendPipelinePhase.kt:36)
	at org.jetbrains.kotlin.cli.pipeline.jvm.JvmBackendPipelinePhase.executePhase(JvmBackendPipelinePhase.kt:29)
	at org.jetbrains.kotlin.cli.pipeline.PipelinePhase.phaseBody(PipelinePhase.kt:68)
	at org.jetbrains.kotlin.cli.pipeline.PipelinePhase.phaseBody(PipelinePhase.kt:58)
	at org.jetbrains.kotlin.config.phaser.NamedCompilerPhase.invoke(CompilerPhase.kt:102)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:22)
	at org.jetbrains.kotlin.config.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:53)
	at org.jetbrains.kotlin.cli.pipeline.AbstractCliPipeline.runPhasedPipeline(AbstractCliPipeline.kt:109)
	at org.jetbrains.kotlin.cli.pipeline.AbstractCliPipeline.execute(AbstractCliPipeline.kt:68)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecutePhased(K2JVMCompiler.kt:78)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecutePhased(K2JVMCompiler.kt:44)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:90)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.kt:352)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunnerBase.runCompiler(IncrementalJvmCompilerRunnerBase.kt:175)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunnerBase.runCompiler(IncrementalJvmCompilerRunnerBase.kt:38)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:504)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:421)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:306)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:133)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:679)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:93)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1806)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:714)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:400)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=androidx.lifecycle.LifecycleOwner origin=GET_PROPERTY
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:129)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:82)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:586)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:135)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:725)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:135)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:527)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:532)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:135)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:233)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:126)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	... 45 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/runtime/CompositionLocal;.getCurrent()Ljava/lang/Object;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:129)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction$lambda$2(SourceCompilerForInline.kt:98)
	at org.jetbrains.kotlin.codegen.inline.InlineCache.computeMethodBytes(InlineCache.kt:90)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:93)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:65)
	... 59 more


